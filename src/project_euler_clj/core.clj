(ns project-euler-clj.core)

;; If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
;;Find the sum of all the multiples of 3 or 5 below 1000.
(defn problem01
  "Returns the sum of all the multiples of 3 and 5 below a number"
  [max]
  (reduce + (filter
             (fn [x] (or (zero? (mod x 3))
                         (zero? (mod x 5))))
             (range max))))


;; Each new term in the Fibonacci sequence is generated by adding the previous two terms
;; By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89
;; By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
(defn fibonacci
  "Returns vector of fibonacci numbers up below a number"
  ([max]
  (cond
    (= 0 max) [0]
    (= 1 max) [0]
    (= 2 max) [0 1 1]
    :else (fibonacci max [0 1 1 2])))
  ([max sequence]
   (let [next (reduce + (take-last 2 sequence))]
     (if (>= next max)
       sequence
       (fibonacci max (conj sequence next))))))

(defn problem02
  "Returns the sum of even valued Fibonacci numbers below a number"
  [max]
  (reduce + (filter even? (fibonacci max))))
